{"version":3,"sources":["components/app/CheckUrl.js","utils/constants.js","lang/index.js","utils/LocalStorage.js","components/layout/Header.js","components/layout/Navbar.js","components/app/Loading.js","components/modal/ModalLoading.js","components/modal/ModalAddUser.js","utils/dom.js","components/modal/index.js","components/layout/index.js","utils/request.js","service/auth.js","store/modal/modal.action.js","pages/login.js","utils/cookies.js","pages/home.js","service/user.js","components/user/UserTable.js","pages/users/index.js","service/group.js","components/group/GroupTable.js","pages/groups/index.js","App.js","store/modal/modal.state.js","store/modal/modal.reducer.js","store/index.js","store/modal/index.js","index.js"],"names":["CheckUrl","_ref","children","router","useRouteMatch","location","useLocation","useEffect","console","log","path","React","createElement","Fragment","ROUTER","resources","en","translation","vn","i18n","use","initReactI18next","init","fallbackLng","value","localStorage","getItem","getLanguage","debug","interpolation","escapeValue","changeLanguage","lang","setItem","setLanguage","Header","history","useHistory","routerNames","arguments","length","undefined","_","includes","pathname","isRouter","className","onClick","Navbar","t","useTranslation","getActive","Link","to","concat","Loading","ModalLoading","useSelector","state","modal","modalLoading","show","ModalAddGateway","callback","ref","useRef","handleClick","event","current","contains","target","document","addEventListener","removeEventListener","useOutsideClick","Modals","ModalAddUser","Layout","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","requestGet","_asyncToGenerator","_callee","url","params","config","res","_args","_context","axios","get","_objectSpread","data","status","msg","message","t0","_x","apply","requestPost","_ref2","_callee2","_args2","_context2","post","_x2","authService","login","username","password","showModalLoading","createAction","hideModalLoading","Login","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","setMessage","handleLogin","token","Cookies","set","setTimeout","onChange","e","Home","useParams","userService","getUser","page","size","search","UserTable","users","pageCount","forcePage","setPage","map","user","index","href","email","gender","phone","birthday","ReactPaginate","containerClassName","activeClassName","breakClassName","breakLabel","nextLabel","pageClassName","pageRangeDisplayed","previousClassName","nextClassName","previousLabel","onPageChange","selected","Users","queryParams","URLSearchParams","currentpage","setUser","loading","setLoading","_useState7","_useState8","setSearch","_useState9","_useState10","totalPage","setTotalPage","pageNum","totalpage","placeholder","groupService","getGroups","GroupTable","groups","group","description","renderOnZeroPageCount","Groups","setGroups","App","Router","Switch","Route","component","modalAddUser","reducer","SHOW_MODAL_LOADING","_objectDestructuringEmpty","HIDE_MODAL_LOADING","createSlice","initialState","reducers","store","configureStore","container","getElementById","createRoot","render","Provider","I18nextProvider"],"mappings":"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","file":"static/js/main.a818ab06.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useRouteMatch, useLocation } from \"react-router-dom\";\r\n\r\nconst CheckUrl = ({ children }) => {\r\n  const router = useRouteMatch();\r\n  const location = useLocation();\r\n  \r\n  useEffect(() => {\r\n    console.log(location);\r\n  }, [router.path]);\r\n\r\n  return (\r\n    <>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckUrl;","export const ROUTER = {\n  HOME: '/home',\n  LOGIN: '/login',\n  TEST: '/test/:id',\n  USERS: '/users',\n  GROUPS: '/groups',\n}","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { getLanguage, setLanguage } from '../utils/LocalStorage';\r\n\r\n// tiếng anh\r\nimport en from './en';\r\n// tiếng việt\r\nimport vn from './vn';\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: en,\r\n  },\r\n  vn: {\r\n    translation: vn,\r\n  }\r\n}\r\n\r\n// khơi tạo cho midllware thay đổi ngôn ngữ\r\ni18n.use(initReactI18next)\r\n    .init({\r\n      resources,\r\n      // giá trị mặc định ngôn ngữ lấy từ local storage\r\n      fallbackLng: getLanguage(),\r\n      debug: true,\r\n      interpolation: {\r\n        escapeValue: false // not needed for react as it escapes by default\r\n      }\r\n    });\r\n\r\nexport const changeLanguage = (lang) => {\r\n  i18n.changeLanguage(lang);\r\n  // lưu giá trị ngôn ngữ vào local storage\r\n  setLanguage(lang);\r\n}\r\n\r\nexport default i18n;","const LANGUAGE = 'language';\r\n\r\nexport const getLanguage = () => {\r\n  const value = localStorage.getItem(LANGUAGE);\r\n  if (value) {\r\n    return value;\r\n  }\r\n  return 'vn';\r\n}\r\n\r\nexport const setLanguage = (lang) => {\r\n  localStorage.setItem(LANGUAGE, lang);\r\n}","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTER } from \"../../utils/constants\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { changeLanguage } from \"../../lang\";\r\n\r\nconst Header = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const isRouter = (routerNames = []) => {\r\n    return _.includes(routerNames, history.location.pathname);\r\n  }\r\n\r\n  const getActive = (routerNames = []) => {\r\n    return _.includes(routerNames, history.location.pathname) ? 'header-active' : '';\r\n  };\r\n\r\n  const getContent = () => {\r\n    if (isRouter([ROUTER.LOGIN])) {\r\n      return (<div className=\"header-tiny\" />)\r\n    } else {\r\n      return (\r\n        <div className=\"header-tiny header-light\">\r\n          <div className=\"header-lang\">\r\n            <div className=\"lang-item\" onClick={() => {changeLanguage('vn')}}>\r\n              VN\r\n            </div>\r\n            <div className=\"lang-item\" onClick={() => {changeLanguage('en')}}>\r\n              EN\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return getContent()\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom';\nimport { ROUTER } from \"../../utils/constants\";\nimport _ from 'lodash';\nimport { useTranslation } from \"react-i18next\";\n\nconst Navbar = () => {\n\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  const getActive = (routerNames = []) => {\n    return _.includes(routerNames, history.location.pathname) ? 'active' : '';\n  };\n\n  return (\n    <div className=\"navbar\">\n      <div className=\"nav-logo\">\n         <Link to={ROUTER.HOME} className='logo'>{t('app.app_name')}</Link>\n      </div>\n      <div className=\"navbar-container\">\n        <Link to={ROUTER.USERS} className={`nav-item ${getActive([ROUTER.USERS])}`}>\n          {t('navbar.user')}\n        </Link>\n        <Link to={ROUTER.GROUPS} className={`nav-item ${getActive([ROUTER.GROUPS])}`}>\n        {t('navbar.group')}\n        </Link>\n        <Link  to={ROUTER.TEST} className={`nav-item ${getActive([ROUTER.TEST])}`}>\n          Test\n        </Link>\n      </div>\n      <div className=\"nav-item nav-logout\">\n        Đăng xuất\n      </div>\n    </div>\n  )\n}\nexport default Navbar;","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div className=\"app-loading jumping-dots-loader\">\n      <span/>\n      <span/>\n      <span/>\n    </div>\n  )\n}\n\nexport default Loading;","import React from 'react';\nimport Loading from '../app/Loading';\nimport { useSelector } from 'react-redux';\n\nconst ModalLoading = () => {\n\n  const modalLoading = useSelector(state => state.modal.modalLoading);\n\n  if (modalLoading.show) {\n    return (\n      <div className=\"modal-backdrop modal-loading\">\n        <div className={`modal fade show`}>\n          <Loading />\n        </div>\n      </div>\n    );\n  } else {\n    return <></>\n  }\n  \n}\n\nexport default ModalLoading;","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { hideModalAddGateway } from '../../store/modals/modals.action';\r\nimport { useOutsideClick } from '../../utils/dom';\r\n\r\nconst ModalAddGateway = () => {\r\n  // const modalAddGateway = useSelector(state => state.modals.modalAddGateway);\r\n  // const dispatch = useDispatch();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const handleClose = () => {\r\n    // dispatch(hideModalAddGateway());\r\n  }\r\n\r\n  const ref = useOutsideClick(handleClose);\r\n\r\n  if (false) {\r\n    return (\r\n      <div className=\"modal-backdrop modal-common modal-edit-organization\">\r\n        <div className={`modal fade ${true ? 'show' : ''}`}>\r\n          <div className=\"modal-dialog\" role=\"document\" ref={ref}>\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => { handleClose() }}>\r\n                  <img src=\"/images/icon/cancel-white.svg\"/>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className='modal-container'>\r\n                  <div className='title'>\r\n                    <span >{t('modal_edit_organization_gateway.title')}</span>\r\n                  </div>\r\n                  <div className='modal-input-container'>\r\n                    <div className='content-header'>\r\n                      <div className='label-input'>\r\n                        <span>{t('modal_edit_organization_gateway.sort')}</span>\r\n                        <span className='label-required'>{t('modal_create_organization.required')}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className='input-form pb-4'>\r\n                      <div className='label-input'>\r\n                        <span>{t('modal_edit_organization_gateway.mac_address_label')}</span>\r\n                        <span className='label-required'>{t('modal_create_organization.required')}</span>\r\n                      </div>\r\n                      <input className='input-text item-input' placeholder={t('modal_edit_organization_gateway.mac_address_placeholder')}/>\r\n                    </div>\r\n                    <div className='input-form'>\r\n                      <div className='label-input'>\r\n                        <span>{t('modal_edit_organization_gateway.name_label')}</span>\r\n                      </div>\r\n                      <input className='input-text item-input' placeholder={t('modal_edit_organization_gateway.name_placeholder')}/>\r\n                    </div>\r\n                  </div>\r\n                  <div className='w-320'>\r\n                    <button className='btn'>{t('modal_edit_organization_gateway.btn')}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n\r\n}\r\n\r\nexport default ModalAddGateway;","import {useRef, useEffect} from 'react';\r\n\r\nexport const useOutsideClick = (callback) => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    const handleClick = (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClick, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClick, true);\r\n    };\r\n  }, [ref]);\r\n\r\n  return ref;\r\n};","import React from 'react';\r\nimport ModalLoading from './ModalLoading';\r\nimport ModalAddUser from './ModalAddUser';\r\n\r\nconst Modals = () => {\r\n  return (\r\n    <>\r\n      <ModalLoading />\r\n      <ModalAddUser />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modals;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport { ROUTER } from \"../../utils/constants\";\r\nimport Modals from \"../modal\";\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  const history = useHistory();\r\n  \r\n  const isRouter = (routerNames = []) => {\r\n    return _.includes(routerNames, history.location.pathname);\r\n  }\r\n\r\n  const getNavbar = () => {\r\n    if (!isRouter([ROUTER.LOGIN])) {\r\n      return (<Navbar />)\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {getNavbar()}\r\n      <div className={`page-body-wrapper ${!isRouter([ROUTER.LOGIN]) ? 'page-body-with-nav' : ''}`}>\r\n        {children}\r\n      </div>\r\n      <Modals />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout;","// thư viên dùng để gọi api\nimport axios from \"axios\";\n\n// url mặc định\nconst DEFAULT_URL = 'http://localhost:3013';\n\nexport const requestGet = async(url, params = {}, config = {}) => {\n  // vì khi gọi api thì sẽ xảy ra các lỗi không kiểm soát được nên phải phải cho vào try catch\n  try {\n    // gì gọi api thì sẽ mất thời gian nên nó là bất đồng bộ vì vậy dùng async và await\n    // nếu thì chó thể dùng .then()\n    // hoặc dùng Promise()\n    const res = await axios.get(DEFAULT_URL + url, {\n      ...config,\n      params,\n    })\n    // nếu k có gì xảy ra thì sẽ trả về kêt quả bên dưới\n    return {\n      data: res.data.data,\n      status: res.status,\n      msg: res.message,\n    };\n  } catch(error) {\n    // xảy ra lỗi\n    return {\n      status: 0,\n      msg: error,\n    }\n  }\n}\n\nexport const requestPost = async(url, data = {}, config = {}) => {\n  // vì khi gọi api thì sẽ xảy ra các lỗi không kiểm soát được nên phải phải cho vào try catch\n  try {\n    // gì gọi api thì sẽ mất thời gian nên nó là bất đồng bộ vì vậy dùng async và await\n    // nếu thì chó thể dùng .then()\n    // hoặc dùng Promise()\n    const res = await axios.post(DEFAULT_URL + url, data, config)\n    // nếu k có gì xảy ra thì sẽ trả về kêt quả bên dưới\n    return {\n      data: res.data,\n      status: res.data.status,\n      msg: res.data.message,\n    };\n  } catch(error) {\n    // xảy ra lỗi\n    return {\n      status: 0,\n      msg: error,\n    }\n  }\n}\n\n","import { requestPost } from \"../utils/request\";\n\nconst authService = {\n  login(username, password) {\n    return requestPost('/auth/login', { username, password })\n  }\n}\n\nexport default authService;","import { createAction } from \"@reduxjs/toolkit\";\n\n//modal loading\nexport const showModalLoading = createAction('modal/SHOW_MODAL_LOADING');\nexport const hideModalLoading = createAction('modal/HIDE_MODAL_LOADING');","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport authService from '../service/auth';\nimport { setToken } from \"../utils/cookies\";\nimport { validateEmail } from \"../utils/validate\";\nimport { showModalLoading, hideModalLoading } from \"../store/modal/modal.action\";\nimport { useDispatch } from \"react-redux\";\n\nconst Login = () => {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleLogin = async() => {\n    setMessage('');\n    if (!username || !password) {\n      setMessage('vui lòng nhập đầy đủ thông tin');\n      return;\n    }\n    // kiến thức ngoài lề về regex nếu muốn tìm hiểu\n    // if (!validateEmail(username)) {\n    //   setMessage('vui lòng nhập đúng format mail');\n    //   return;\n    // }\n    dispatch(showModalLoading());\n    const res = await authService.login(username, password);\n    if (res.status === 200) {\n      setToken(res.data.token);\n      history.push('/');\n    } else if (res.status === 404) {\n      setMessage('Người dùng không tồn tại');\n    } else {\n      setMessage(res.msg);\n    }\n    setTimeout(() => {\n      dispatch(hideModalLoading());\n    }, \"1000\")\n  }\n\n  \n\n  return (\n    <div className=\"common-page login-page\">\n      <div className=\"page-container\">\n        <div className=\"page-content\">\n          <div className=\"logo-title\">Slytherin</div>\n          <div className=\"sub-title\">Đăng nhập</div>\n          <div className=\"input-container\">\n            <div className=\"label-input\">Tài khoản</div>\n            <input \n              value={username}\n              className={`input-form input-text ${username ? 'active-input' : ''}`}\n              type='text'\n              onChange={(e) => {setUsername(e.target.value)}}\n            />\n          </div>\n          <div className=\"input-container\">\n            <div className=\"label-input\">Mật khẩu</div>\n            <input\n              value={password}\n              className={`input-form input-text ${password ? 'active-input' : ''}`}\n              type='password'\n              onChange={(e) => {setPassword(e.target.value)}}\n            />\n          </div>\n          <button\n            className={`btn-login ${username && password ? 'btn-active': ''}`}\n            onClick={() => {handleLogin()}}\n          >Đăng nhập</button>\n          <div className=\"forgot-pass\">\n            <Link to=''>Quên mật khẩu?</Link>\n          </div>\n          <p>{message}</p>\n        </div>\n      </div>\n        \n    </div>\n  )\n}\n\nexport default Login;","import Cookies from \"js-cookie\";\n\nconst TOKEN = 'token';\n\nexport const setToken = (token) => {\n  Cookies.set(TOKEN, token);\n}\n\nexport const getToken = () => {\n  return Cookies.get(TOKEN);\n}\n\nexport const deleteToken = () => {\n  Cookies.remove(TOKEN);\n}\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        console.log(params);\r\n      }, [])\r\n\r\n    return (\r\n        <div>giag</div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { requestGet } from \"../utils/request\";\n\nconst userService = {\n  // gọi api get user\n  getUser(page = 1, size = 10, search = '') {\n    return requestGet('/user', {page, size, search});\n  }\n}\n\nexport default userService;","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\n// nhận giá trị users từ component cha props\nconst UserTable = ({ users, pageCount, forcePage, setPage }) => {\n\n  const history = useHistory();\n\n  const handlePageClick = (event) => {\n    //event.selected + 1 trang mà người dùng chọn\n    // setPage là hàm mà của component cha(Users) truyền cho \n    setPage(event.selected + 1);\n    // redirect trang sang trang người dùng chọn\n    history.push(`/users?page=${ event.selected + 1}`)\n  }\n\n  return (\n    <div className='table-responsive table-common'>\n        <div className='table-container'>\n          <div className='table-header'>\n            <div className='table-header-item col-large'>\n              Tên\n            </div>\n            <div className='table-header-item item-center col-large'>\n              mail\n            </div>\n            <div className='table-header-item col-large'>\n              gioi tinh\n            </div>\n            <div className='table-header-item col-large'>\n              dien thoai\n            </div>\n            <div className='table-header-item col-large'>\n              sinh nhat\n            </div>\n          </div>\n          <div className='table-content'>\n            {\n              users.map((user, index) => (\n                <div className='table-content-item' key={index}>\n                  <div className='table-content-item-col col-large col-name'>\n                    <Link href={`#`}>\n                      {user.username}\n                    </Link>\n                  </div>\n                  <div className='table-content-item-col item-center col-large'>\n                    {user.email}\n                  </div>\n                  <div className='table-content-item-col col-large'>\n                    {user.gender}\n                  </div>\n                  <div className='table-content-item-col col-large'>\n                    {user.phone}\n                  </div>\n                  <div className='table-content-item-col col-large'>\n                    {user.birthday}\n                  </div>\n                </div>\n              ))\n            }\n          </div>\n        </div>\n        <div className='table-paginate pl-8'>\n          <div className='paginate-container'>\n            <ReactPaginate\n              containerClassName={'pagination'}\n              activeClassName={'item active '}\n              breakClassName={'item break-me '}\n              breakLabel='...'\n              nextLabel='>'\n              pageClassName={'item pagination-page '}\n              pageRangeDisplayed={3}\n              previousClassName={'item previous'}\n              nextClassName={'item next '}\n              pageCount={pageCount}\n              previousLabel='<'\n              onPageChange={handlePageClick}\n              forcePage={forcePage - 1}\n            />\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default UserTable;","import React from \"react\";\nimport { useEffect } from \"react\";\nimport userService from \"../../service/user\";\nimport { useState } from \"react\";\nimport Loading from \"../../components/app/Loading\";\nimport UserTable from \"../../components/user/UserTable\";\nimport { useLocation  } from \"react-router-dom\";\n\n\nconst Users = () => {\n\n  // lấy ra cái thông tin của page trên url (vd users?page=2 => 2)\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const currentpage = queryParams.get('page') ? queryParams.get('page') : 1;\n\n  // thông tin lấy từ api sẽ truyền vào đây state\n  const [users, setUser] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(currentpage);\n  const [search, setSearch] = useState('');\n  const [totalPage, setTotalPage] = useState(0);\n\n  // sau khi con update page cho component cha thì Users lắng nghe sự thay đổi page để gọi lại hàm getUser\n  useEffect(() => {\n    getUser(page);\n  }, [page]);\n\n  // lấy thông tin người dùng từ api\n  const getUser = async (pageNum) => {\n    setLoading(true);\n    // gọi service lấy thông tin user\n    const res = await userService.getUser(pageNum, 5, search);\n    if (res.status === 200) {\n      // nếu mà thành công thì gán giá trị cho biến users\n      setUser(res.data.data);\n      setTotalPage(res.data.totalpage);\n    } else {\n      // nếu lỗi thì vào đây\n      console.log(res.msg);\n    }\n    setLoading(false);\n  }\n\n  // thay vì dùng ?: thì sẽ viết hàm để xử lý kết quả khi loading\n  const getTableContent = () => {\n    if (loading) {\n      return <Loading />\n    }\n    // truyền giá trị users cho component con\n    return <UserTable \n            users={users}\n            pageCount={totalPage}\n            forcePage={page}\n            setPage={setPage}\n          />\n  }\n\n  const handleSearch = () => {\n    getUser(page)\n  }\n\n  return (\n    <div className=\"common-page user-page\">\n      <div className=\"common-title\">\n        Danh sach nguoi dung\n      </div>\n      <div className=\"user-body\">\n        <div className=\"common-filter\">\n          <div className='input-form'>\n            <input className='input-select select-mode'\n              placeholder=\"search\"\n              onChange={(e) => {setSearch(e.target.value);}}\n            />\n            <button className='btn btn-add flex' onClick={() => { handleSearch() }}>\n              search\n            </button>\n          </div>\n          <div className=\"action-filter\">\n            <button className='btn btn-add flex'>\n              new\n            </button>\n          </div>\n        </div>\n        {getTableContent()}\n      </div>\n    </div>\n  )\n}\n\nexport default Users;","import { requestGet } from \"../utils/request\";\n\nconst groupService = {\n\n    getGroups() {\n        return requestGet('/group');\n    }\n}\n\nexport default groupService;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst GroupTable = ({groups}) => {\n    return (\n        <div className='table-responsive table-common'>\n            <div className='table-container'>\n                <div className='table-header'>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item item-center col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                    <div className='table-header-item col-large'>\n                        ten\n                    </div>\n                </div>\n                <div className='table-content'>\n                    {\n                        groups.map((group, index) => (\n                            <div className='table-content-item' key={index}>\n                                <div className='table-content-item-col col-large col-name'>\n                                    <Link href={`#`}>\n                                        {group.name}\n                                    </Link>\n                                </div>\n                                <div className='table-content-item-col item-center col-large'>\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    <Link href={`#`}>\n                                        {group.description}\n                                    </Link>\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    <Link href={`#`}>\n                                        {group.description}\n                                    </Link>\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    dfasd\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    dfds\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    dsad\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    asd\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    dsad\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    adsd\n                                </div>\n                                <div className='table-content-item-col col-large'>\n                                    asd\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div className='table-paginate pl-8'>\n                <div className='paginate-container'>\n                    <ReactPaginate\n                        containerClassName={'pagination'}\n                        activeClassName={'item active '}\n                        breakClassName={'item break-me '}\n                        breakLabel='...'\n                        nextLabel='>'\n                        pageClassName={'item pagination-page '}\n                        pageRangeDisplayed={3}\n                        previousClassName={'item previous'}\n                        nextClassName={'item next '}\n                        pageCount={100}\n                        previousLabel='<'\n                        renderOnZeroPageCount={null}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GroupTable;","import React, {useEffect, useState} from \"react\";\nimport Loading from \"../../components/app/Loading\";\nimport groupService from \"../../service/group\";\nimport GroupTable from \"../../components/group/GroupTable\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Groups = () => {\n\n  const { t } = useTranslation();\n\n  const [groups, setGroups] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    getGroups();\n  }, []);\n\n  const getGroups = async  () => {\n    setLoading(true);\n    const  res = await groupService.getGroups();\n    if (res.status === 200){\n      setGroups(res.data.data);\n      console.log(res.data.data);\n    }\n    else{\n      console.log(res.data.message);\n    }\n    setLoading(false);\n  }\n\n  const getTable = () => {\n    if (loading) {\n      return <Loading />\n    }\n    // truyền giá trị users cho component con\n    return <GroupTable groups={groups}/>\n  }\n\n  return (\n    <div className=\"common-page user-page\">\n      <div className=\"common-title\">\n        {t('group.title')}\n\n      </div>\n      <div className=\"user-body\">\n        <div className=\"filter\">\n\n        </div>\n        {getTable()}\n      </div>\n    </div>\n  )\n}\n\nexport default Groups;","import React, { useEffect } from \"react\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport CheckUrl from \"./components/app/CheckUrl\";\nimport Layout from \"./components/layout\";\nimport Login from \"./pages/login\";\n\nimport Home from \"./pages/home\";\nimport { ROUTER } from \"./utils/constants\";\nimport Users from \"./pages/users\";\nimport Groups from \"./pages/groups\";\n\nconst App = () => {\n\n  return (\n    <Router>\n      <CheckUrl>\n        <Switch>\n          <Layout>\n            <Route path={ROUTER.LOGIN} component={Login}/>\n            <Route path={ROUTER.HOME} component={Home}/>\n            <Route path={ROUTER.TEST} component={Home}/>\n            <Route path={ROUTER.USERS} component={Users}/>\n            <Route path={ROUTER.GROUPS} component={Groups}/>\n          </Layout>\n        </Switch>  \n      </CheckUrl>\n    </Router>\n  );\n}\n\nexport default App;\n","const state = {\n  modalLoading: {\n    show: false,\n  },\n  modalAddUser: {\n    show: false,\n  }\n}\n\nexport default state;","const reducer = {\n  SHOW_MODAL_LOADING: (state, {}) => {\n    state.modalLoading.show = true;\n  },\n  HIDE_MODAL_LOADING: (state, {}) => {\n    state.modalLoading.show = false;\n  }\n}\n\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\n\nimport modalReducer from './modal';\n\nconst reducer = {\n  modal: modalReducer,\n};\n\nconst store = configureStore({\n  reducer,\n});\n\nexport default store;","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport initialState from './modal.state';\nimport reducers from './modal.reducer';\n\nconst modalSlice = createSlice({\n  name: 'modal',\n  initialState,\n  reducers,\n})\n\nexport default modalSlice.reducer;","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport './styles/app.scss';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from \"./lang\";\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\n\nroot.render(\n  // I18nextProvider setup midlware cho toàn bộ component nhận giá trị từ folder lang\n  <Provider store={store}>\n    <I18nextProvider i18n={i18n}>\n      <React.Fragment>\n        <App />\n      </React.Fragment>\n    </I18nextProvider>\n  </Provider>\n);\n\n"],"sourceRoot":""}